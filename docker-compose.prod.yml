services:
  web:
    build: .
    restart: unless-stopped
    ports:
      - ${PORT}:${PORT}
    env_file:
      - .env
    command: gunicorn -w 1 -b ${HOST}:${PORT} app:app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
      back:
      default:
  db:
    image: postgres:16
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file: .env
    restart: unless-stopped
    environment:
      - PGUSER=$POSTGRES_USER
      - PGDATABASE=$POSTGRES_DB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      back:

volumes:
  postgres_data:

networks:
  back:
    driver: bridge
    enable_ipv6: true
    internal: true

  default:
    driver: bridge
